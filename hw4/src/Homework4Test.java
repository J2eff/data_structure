import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class Homework4Test {

    /**
     * Fibonacci Test
     */
    @Test
    void iterative_and_tailrec_results_must_match() {

        int[] iter_result =
            IntStream.rangeClosed(0, 20).map(Fibonacci::fibIter).toArray();

        int[] rec_result =
            IntStream.rangeClosed(0, 20).map(Fibonacci::fib).toArray();

        assertTrue(Arrays.equals(iter_result, rec_result));
    }

    @Test
    void should_cause_stack_overflow() {

        assertThrows(StackOverflowError.class, () -> Fibonacci.fib(50000));
    }

    /**
     * PigLatin Test
     */
    @Test
    void test_words_starting_with_vowels() {
        List<String> words = Arrays.asList("authorize", "eat", "ionize", "own", "utilize");
        List<String> expected = Arrays.asList("authorizeay", "eatay", "ionizeay", "ownay", "utilizeay");
        List<String> actual =
            words.stream().map(PigLatin::toPigLatin).collect(Collectors.toList());

        assertEquals(expected, actual);
    }

    @Test
    void test_words_starting_with_consonants() {
        List<String> words = Arrays.asList("pig", "latin", "smile", "string", "woops");
        List<String> expected = Arrays.asList("igpay", "atinlay", "ilesmay", "ingstray", "oopsway");
        List<String> actual =
            words.stream().map(PigLatin::toPigLatin).collect(Collectors.toList());

        assertEquals(expected, actual);
    }

    /**
     * Puzzle Test
     */
    @Test
    void extensive_puzzle_test() {
        for (int i = 0; i < testBoxes.length; i++) {
            Box box = new Box(testBoxes[i]);

            assertEquals(results[i], box.start());
        }
    }

    public static int testBoxes[][] = {
        {0,6,17,10,9,3,12,6,1,5,7,5,9,10,7,5,14,17,3,19},
        {0,11,14,15,9,18,12,8,4,12,4,2,2,14,12,6,16,13,9,10},
        {0,15,10,15,13,1,15,19,17,17,5,2,12,10,8,16,14,19,9,11},
        {0,8,7,5,3,15,7,16,1,10,10,2,6,6,6,8,14,9,11,3},
        {0,17,9,18,16,1,18,5,19,18,1,8,1,2,13,5,17,19,15,11},
        {0,2,14,9,13,1,15,2,19,5,3,11,8,15,17,19,16,16,13,19},
        {0,19,9,14,13,1,11,3,5,4,8,3,16,9,19,3,3,6,4,16},
        {0,12,5,4,6,10,8,14,10,12,10,8,16,14,4,18,2,19,16,9},
        {0,16,10,1,3,4,15,14,3,4,1,10,5,10,15,3,18,2,4,12},
        {0,16,15,13,7,4,10,10,16,14,15,14,11,9,4,17,18,18,19,2},
        {0,15,6,16,4,4,15,2,17,6,7,2,14,10,15,17,19,16,19,19},
        {0,6,6,1,5,8,4,8,7,7,14,11,17,10,9,7,8,16,19,3},
        {0,6,2,3,10,18,14,5,5,14,10,15,6,1,6,19,12,15,6,9},
        {0,2,7,6,11,11,14,12,1,18,7,18,15,17,14,18,15,3,3,17},
        {0,8,4,8,11,8,1,19,15,6,5,13,8,17,11,12,8,6,6,10},
        {0,13,11,10,12,4,13,11,7,6,3,2,9,12,5,13,17,2,9,7},
        {0,17,5,18,18,17,11,8,6,14,13,16,5,10,4,3,16,8,3,8},
        {0,4,14,19,9,18,13,4,13,3,14,16,9,19,3,1,11,16,6,15},
        {0,13,10,18,16,6,2,5,11,9,19,14,16,11,1,10,9,12,12,11},
        {0,19,11,1,11,14,16,8,3,10,9,17,10,15,6,10,5,18,4,11},
        {0,6,6,7,1,8,12,12,7,12,18,16,10,6,17,2,13,14,3,4},
        {0,5,3,18,18,18,6,1,1,3,13,8,19,3,11,12,18,2,3,10},
        {0,11,8,10,8,19,2,8,12,7,17,18,17,3,13,16,5,4,1,14},
        {0,6,19,3,1,17,6,18,7,10,1,11,4,15,2,13,10,15,18,1},
        {0,11,2,5,13,5,11,9,13,6,17,7,12,14,14,9,12,14,15,9},
        {0,10,18,5,16,3,2,9,10,11,13,13,2,16,2,4,5,13,19,8},
        {0,5,4,10,4,14,11,6,17,4,17,3,17,12,9,4,4,18,1,7},
        {0,2,10,18,2,15,12,14,18,10,4,18,6,1,19,3,18,19,2,1},
        {0,12,7,19,5,18,10,16,8,8,14,4,19,4,11,3,13,10,5,18},
        {0,7,19,4,15,15,18,19,7,12,10,17,3,18,2,7,1,2,6,7},
        {0,12,14,13,14,14,2,18,9,14,6,19,12,5,12,15,4,1,4,12},
        {0,18,11,8,4,9,16,1,4,6,14,7,6,8,11,4,4,8,2,4},
        {0,15,18,8,17,7,17,19,16,12,15,1,2,14,2,19,7,4,3,16},
        {0,14,16,2,10,17,12,15,17,5,19,7,5,11,8,11,9,16,8,13},
        {0,8,5,17,8,13,7,4,12,8,2,19,6,5,2,1,16,12,4,3},
        {0,16,12,14,6,4,13,1,4,2,13,5,1,18,5,11,8,1,18,2},

        {0,17,11,16,11,12,4,8,14,16,2,4,5,2,6,2,2,18,19,16},
        {0,17,1,8,16,14,19,19,1,13,6,6,17,18,3,7,11,14,9,10},
        {0,1,4,9,9,5,2,1,10,8,6,2,1,2,1,18,10,15,15,3},
        {0,18,14,11,7,2,11,7,15,9,1,13,1,5,18,2,18,13,4,11},
        {0,3,1,6,6,10,1,19,14,18,2,16,4,12,15,17,16,3,17,6},
        {0,9,14,3,4,9,15,1,16,18,8,18,5,11,18,16,5,4,13,17},
        {0,8,15,8,9,11,13,7,11,10,9,7,7,8,10,12,17,2,16,15},
        {0,8,11,7,7,7,3,10,4,7,15,7,15,14,18,7,1,9,8,10},
        {0,3,18,14,13,17,16,7,7,11,2,11,7,13,9,12,6,14,17,17},
        {0,11,9,16,8,7,10,9,16,16,9,16,16,5,11,15,6,15,15,3},
        {0,9,2,15,6,17,3,11,16,14,12,1,18,1,19,1,19,7,18,12},
        {0,6,12,2,17,11,3,12,18,19,17,17,1,16,3,11,1,19,17,10},
        {0,3,5,6,11,8,2,10,12,16,16,8,6,2,14,1,17,15,3,3},
        {0,7,15,17,8,16,6,18,14,11,19,18,10,4,4,7,3,2,5,18},
        {0,3,14,6,8,5,16,3,3,6,10,12,19,9,19,2,8,14,7,18},
        {0,7,7,17,17,9,1,7,16,1,8,18,17,9,4,3,17,10,15,4},
        {0,1,14,2,1,14,17,6,9,19,17,5,11,6,3,4,6,13,5,5},
        {0,3,10,2,14,11,18,4,2,14,14,13,12,14,2,14,16,7,16,9},
        {0,13,7,16,14,14,15,13,19,13,18,15,12,17,14,3,12,14,5,15},
        {0,1,6,14,8,11,12,8,13,6,17,13,7,9,2,9,13,7,18,3},
        {0,15,3,9,19,17,11,10,1,13,13,7,15,14,14,17,1,18,1,9},
        {0,3,2,16,6,14,16,9,10,5,7,15,4,10,18,19,6,2,9,11},
        {0,16,16,14,2,19,19,3,6,14,18,16,9,6,10,14,3,18,13,7},
        {0,15,19,17,9,19,2,4,16,9,15,1,2,9,12,10,9,2,11,15},
        {0,18,3,8,19,4,18,4,17,9,12,15,4,6,11,7,18,14,11,17},
        {0,10,3,10,12,3,3,11,12,15,17,16,14,7,12,8,17,10,3,14},
        {0,12,6,14,6,8,6,16,11,18,16,12,17,13,9,13,12,9,11,17},
        {0,18,15,13,3,8,15,18,18,4,13,15,16,4,18,16,3,15,8,10},
        {0,9,8,19,12,7,17,17,16,8,7,19,5,17,16,12,9,3,17,17},
        {0,19,8,12,5,4,8,16,10,10,13,7,3,1,16,4,5,17,8,19},
        {0,1,14,18,1,11,1,14,2,19,1,13,10,18,2,13,4,11,5,2},
        {0,10,6,3,6,13,8,12,15,18,5,16,11,1,10,9,16,4,6,13},
        {0,11,14,1,11,19,15,8,19,13,14,3,9,1,9,5,17,17,8,4},
        {0,2,3,5,1,14,3,4,17,3,9,8,6,7,7,6,13,5,11,9},
        {0,4,6,9,4,1,10,11,7,16,7,11,2,9,11,16,9,1,14,11},
        {0,19,19,4,7,4,7,9,13,12,9,14,18,15,11,18,6,9,17,8},
        {0,12,5,4,19,1,2,11,15,14,8,11,15,3,13,11,1,9,13,8},
        {0,15,12,14,14,10,11,7,15,10,1,9,16,9,7,7,1,12,6,1},
        {0,10,6,16,17,10,8,13,8,1,10,5,12,9,14,17,13,7,19,17},
        {0,2,13,12,18,11,3,17,7,13,6,17,10,12,1,19,18,14,10,5},
        {0,11,7,19,6,4,9,1,14,19,19,18,9,14,9,2,11,18,6,18},
        {0,14,14,12,7,3,19,14,4,9,5,12,15,11,1,7,10,16,11,15},
        {0,8,13,2,8,16,13,6,13,19,12,6,13,9,6,1,6,9,9,14},
        {0,9,9,16,3,10,13,19,9,1,10,3,5,11,4,9,6,18,11,15},
        {0,18,14,1,11,18,12,13,6,2,1,16,2,7,2,12,14,11,17,14},
        {0,19,16,2,11,10,8,18,8,17,2,5,4,1,6,8,16,11,12,8},
        {0,11,2,6,16,1,8,11,15,19,3,14,4,14,14,4,1,11,7,8},
        {0,4,3,4,1,19,16,13,11,5,14,4,11,4,15,7,8,12,19,4},
        {0,4,18,7,9,13,1,9,6,18,15,16,3,11,12,10,12,16,1,15},
        {0,10,13,11,6,3,4,10,11,18,8,17,7,19,12,12,9,7,10,4},
        {0,5,4,6,7,3,18,1,12,3,6,2,10,9,4,8,10,16,9,4},
        {0,11,19,17,8,19,2,17,2,6,19,10,6,12,8,4,5,13,16,18},
        {0,10,1,14,17,16,5,10,12,11,9,7,13,18,1,4,3,15,6,4},
        {0,9,4,15,2,19,7,19,5,13,2,8,18,17,14,11,15,10,15,6},
        {0,17,6,12,12,1,15,7,4,11,14,6,7,18,3,14,1,14,17,10},
        {0,13,7,17,19,12,1,7,6,15,14,12,16,2,5,12,12,16,15,14},
        {0,3,5,12,19,18,19,12,8,1,13,9,19,19,3,10,9,9,14,2},
        {0,2,6,18,8,12,1,1,15,18,13,19,5,4,13,18,7,1,15,5},
        {0,10,3,19,16,1,1,6,19,10,14,6,4,1,10,4,2,3,3,12},
        {0,7,1,19,14,16,11,17,3,7,13,12,16,13,1,3,16,4,13,15},
        {0,11,5,8,17,14,11,4,14,7,13,17,1,17,3,5,9,19,9,16},
        {0,10,2,8,3,19,19,6,11,6,13,9,13,17,14,12,2,3,17,10},
        {0,1,1,11,12,12,3,18,14,5,18,19,6,9,4,18,15,8,16,6},
        {0,4,7,19,12,16,15,3,13,11,18,7,10,13,10,18,18,18,15,19}
    };

    public static boolean results[] = {
        true, false, false, false, false, true, false, true, false, false,
        true, false, true, false, false, false, false, false, false, false,
        false, true, false, true, false, false, false, false, false, false,
        false, true, false, false, true, true, false, false, true, false,

        true , false, false, false, false, false, true, false, false, false,
        false, false, true , false, false, false, false, false, false, false  ,
        true , false, false, false, false, true, false, false, false, false,
        true, false, true, false, true, false, false, false, false, true,
        false, true, false, false, false, false, false, false, false, false,
        false, false, true, false, false, false, false, true, true, true,
    };

}
